<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.vehicleaccessrecord.mapper.VehicleAccessRecordMapper">
    
	<sql id="VehicleAccessRecordColumns">
        a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.vehicle_no AS "vehicleNo",
		a.trans_contact_person AS "transContactPerson",
		a.id_card AS "idcard",
		a.trans_contact_person_tel AS "transContactPersonTel",
		a.rfid_no AS "rfidNo",
		a.into_time AS "intoTime",
		a.out_time AS "outTime",
		a.consign_type AS "consignType",
		a.state AS "state",
		a.remarks AS "remarks",
		a.peccancy AS "peccancy",
		a.take_photos AS "takePhotos"
	</sql>
	
	<sql id="VehicleAccessRecordJoins">
		
	</sql>
	
    
	<select id="get" resultType="VehicleAccessRecord" >
		SELECT 
			<include refid="VehicleAccessRecordColumns"/>
		FROM vehicle_access_record a
		<include refid="VehicleAccessRecordJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="VehicleAccessRecord" >
		SELECT 
			<include refid="VehicleAccessRecordColumns"/>
		FROM vehicle_access_record a
		<include refid="VehicleAccessRecordJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="vehicleNo != null and vehicleNo != ''">
				AND a.vehicle_no like #{vehicleNo}
			</if>
			<if test="transContactPerson != null and transContactPerson != ''">
				AND a.trans_contact_person = #{transContactPerson}
			</if>
			<if test="idcard != null and idcard != ''">
				AND a.id_card = #{idcard}
			</if>
			<if test="transContactPersonTel != null and transContactPersonTel != ''">
				AND a.trans_contact_person_tel = #{transContactPersonTel}
			</if>
			<if test="rfidNo != null and rfidNo != ''">
				AND a.rfid_no = #{rfidNo}
			</if>
			<choose>
				<when test="beginintoTime != null and beginintoTime != '' and endintoTime != null and endintoTime != ''">
					AND a.into_time BETWEEN #{beginintoTime} AND #{endintoTime}
				</when>
				<otherwise>
					<if test="beginintoTime != null and beginintoTime != ''">
						AND a.into_time &gt;= #{beginintoTime}
					</if>
					<if test="endintoTime != null and endintoTime != ''">
						AND a.into_time &lt;= #{endintoTime}
					</if>
				</otherwise>
			</choose>
			<choose>
				<when test="beginoutTime != null and beginoutTime != '' and endoutTime != null and endoutTime != ''">
					AND a.out_time BETWEEN #{beginoutTime} AND #{endoutTime}
				</when>
				<otherwise>
					<if test="beginoutTime != null and beginoutTime != ''">
						AND a.out_time &gt;= #{beginoutTime}
					</if>
					<if test="endoutTime != null and endoutTime != ''">
						AND a.out_time &lt;= #{endoutTime}
					</if>
				</otherwise>
			</choose>
			<if test="consignType != null and consignType != ''">
				AND a.consign_type = #{consignType}
			</if>
			<if test="state != null and state != ''">
				AND a.state = #{state}
			</if>
			<if test="peccancy != null and peccancy != ''">
				AND a.peccancy = #{peccancy}
			</if>
			<if test="remarks != null and remarks != ''">
				AND a.remarks = #{remarks}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="VehicleAccessRecord" >
		SELECT 
			<include refid="VehicleAccessRecordColumns"/>
		FROM vehicle_access_record a
		<include refid="VehicleAccessRecordJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO vehicle_access_record(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			vehicle_no,
			trans_contact_person,
			id_card,
			trans_contact_person_tel,
			rfid_no,
			into_time,
			out_time,
			consign_type,
			state,
			remarks,
			peccancy,
			take_photos
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{vehicleNo},
			#{transContactPerson},
			#{idcard},
			#{transContactPersonTel},
			#{rfidNo},
			#{intoTime},
			#{outTime},
			#{consignType},
			#{state},
			#{remarks},
			#{peccancy},
			#{takePhotos}
		)
	</insert>
	
	<update id="update">
		UPDATE vehicle_access_record SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			vehicle_no = #{vehicleNo},
			trans_contact_person = #{transContactPerson},
			id_card = #{idcard},
			trans_contact_person_tel = #{transContactPersonTel},
			rfid_no = #{rfidNo},
			into_time = #{intoTime},
			out_time = #{outTime},
			consign_type = #{consignType},
			state = #{state},
			remarks = #{remarks},
			peccancy = #{peccancy}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM vehicle_access_record
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE vehicle_access_record SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="VehicleAccessRecord" statementType="STATEMENT">
		select * FROM vehicle_access_record  where ${propertyName} = '${value}'
	</select>

	<!-- 查询当前车辆最近一次出入记录 -->
	<select id="queryLatelyRecord" resultType="VehicleAccessRecord">
		SELECT
		<include refid="VehicleAccessRecordColumns"/>
		FROM
			vehicle_access_record a
		WHERE
			 a.vehicle_no = #{vehicleNo}
			order by a.create_date desc
			limit 1
	</select>

	<!--添加出厂时间-->
	<update id="updateOutTime">
		UPDATE vehicle_access_record SET
			out_time = #{outTime},
			state = #{state}
		WHERE id = #{id}
	</update>

	<!--修改车辆状态-->
	<update id="updateState">
		UPDATE vehicle_access_record SET
			state = #{state}
		WHERE id = #{id}
	</update>

	<!-- 查询已进厂未过磅的车辆 -->
	<select id="queryVehicleNum" resultType="VehicleAccessRecord">
		SELECT
			count(v.id) queueNum
		FROM
			vehicle_access_record v
		WHERE
			v.state="2"
			and v.consign_type = "1"
	</select>

	<!--保存车辆违章信息-->
	<update id="savePeccancyInfo">
		UPDATE vehicle_access_record SET
			  peccancy = #{peccancy}
		WHERE vehicle_no = #{vehicleNo}
	</update>

	<!-- 根据车牌号查询最近一条记录 -->
	<select id="queryRecord" resultType="VehicleAccessRecord">
		SELECT
		    <include refid="VehicleAccessRecordColumns"/>
		FROM
			vehicle_access_record a
		WHERE
		    a.vehicle_no = #{vehicleNo}
		order by a.update_date desc
	</select>

	<!--更新图片-->
	<update id="updatePic">
		UPDATE vehicle_access_record SET
			  take_photos = #{takePhotos}
		WHERE id = #{id}
	</update>

	<!-- 更新抬竿信息-->
	<update id="updateOpenInfo">
		UPDATE vehicle_access_record SET
		id_card = #{idcard},
		rfid_no = #{rfidNo}
		WHERE id = #{id}
	</update>

	<!-- 查询当前车辆最近一次出入记录 -->
	<select id="queryLRecord" resultType="VehicleAccessRecord">
		SELECT
		<include refid="VehicleAccessRecordColumns"/>
		FROM
		vehicle_access_record a
		WHERE
		a.vehicle_no = #{vehicleNo}
		and a.create_date &gt; #{beginintoTime}
		and a.create_date &lt; #{endintoTime}
		order by a.create_date desc
	</select>
<!--    进门车辆-->
	<select id="getInCount" resultType="int">
		select count(DISTINCT(id)) from vehicle_access_record r where r.into_time BETWEEN #{beginintoTime} AND #{endintoTime};
	</select>
<!--    出门车辆-->
    <select id="getOutCount" resultType="int">
        select count(DISTINCT(id)) from vehicle_access_record r where r.out_time BETWEEN #{beginoutTime} and #{endoutTime};
    </select>
	<!--	预约车辆-->
	<select id="getConsignVehicleCount" resultType="int">
		select count(DISTINCT(id)) from vehicle_access_record r where r.consign_type=2 and r.into_time BETWEEN #{beginintoTime} AND #{endintoTime};
	</select>
	<!--	预约入厂车辆-->
	<select id="getIntoFactoryVehicle" resultType="VehicleAccessRecord">
		select * from vehicle_access_record r where r.consign_type=1 and r.into_time BETWEEN #{beginintoTime} AND #{endintoTime}
		and remarks in ('三号岗亭','五号岗亭','六号岗亭');
	</select>
<!--    进门手动放行-->
    <select id="getVehicleManualList" resultType="VehicleAccessRecord">
        select * from vehicle_access_record r where r.rfid_no='1' and r.into_time BETWEEN #{beginintoTime} and #{endintoTime};
    </select>
</mapper>